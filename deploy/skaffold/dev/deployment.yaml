apiVersion: v1
kind: Namespace
metadata:
  name:  monitoring

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus-k8s
    namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
    - nodes
    - nodes/proxy
    - services
    - endpoints
    - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
    - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  prometheus-k8s
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  creationTimestamp: null
  namespace: monitoring
  labels:
    app: grafana
    
data:
  default.yaml: |
    default.tmpl
    key: value

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager
  namespace: monitoring 
  labels:
    app: myapplication
data:
  my-properties-file.yaml: |
    config.yaml
    key: value


--- 

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name:  grafana
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:4.2.0
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
          - name: grafana-persistent-storage
            mountPath: /var/lib/grafana
      volumes:
        - name:  grafana-persistent-storage
          emptyDir:  {}

